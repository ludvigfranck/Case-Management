// <auto-generated />
using System;
using Case_Management_Submission_Task.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Case_Management_Submission_Task.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Case_Management_Submission_Task.MVVM.Models.Entities.AddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("char(6)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Case_Management_Submission_Task.MVVM.Models.Entities.CaseEntity", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<int>("DeviceId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CaseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId", "DeviceId", "CaseId");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("Case_Management_Submission_Task.MVVM.Models.Entities.CustomerDeviceEntity", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<int>("DeviceId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("CustomerId", "DeviceId");

                    b.HasIndex("DeviceId");

                    b.ToTable("CustomersDevices");
                });

            modelBuilder.Entity("Case_Management_Submission_Task.MVVM.Models.Entities.CustomerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("char(13)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Case_Management_Submission_Task.MVVM.Models.Entities.DeviceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ArticleNumber")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeviceDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleNumber = new Guid("371494f9-7c40-4f12-a47b-215f1376d296"),
                            DeviceDescription = "Sturdy IPhone from Apple",
                            DeviceName = "IPhone 11",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 2,
                            ArticleNumber = new Guid("bdf7f07d-b497-4508-9a5b-e5e3cf906cb6"),
                            DeviceDescription = "Sturdy IPhone from Apple",
                            DeviceName = "IPhone 12",
                            Price = 6000m
                        },
                        new
                        {
                            Id = 3,
                            ArticleNumber = new Guid("9b3bde8e-fc9a-4c41-b787-792bbde116ba"),
                            DeviceDescription = "Sturdy IPhone from Apple",
                            DeviceName = "IPhone 10",
                            Price = 4000m
                        },
                        new
                        {
                            Id = 4,
                            ArticleNumber = new Guid("9f721a1f-81ef-427f-903b-3ab6f5faac8c"),
                            DeviceDescription = "Sturdy IPhone from Apple",
                            DeviceName = "IPhone 11 Pro",
                            Price = 5500m
                        },
                        new
                        {
                            Id = 5,
                            ArticleNumber = new Guid("55ecb776-de7f-4122-ac7b-dddc81c49370"),
                            DeviceDescription = "Sturdy IPhone from Apple",
                            DeviceName = "IPhone 12 Pro",
                            Price = 6500m
                        },
                        new
                        {
                            Id = 6,
                            ArticleNumber = new Guid("a39b31d7-f98c-4dbe-aaeb-07c6af5abb24"),
                            DeviceDescription = "Sturdy IPhone from Apple",
                            DeviceName = "IPhone 10 Pro",
                            Price = 4500m
                        });
                });

            modelBuilder.Entity("CustomerEntityDeviceEntity", b =>
                {
                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DevicesId")
                        .HasColumnType("int");

                    b.HasKey("CustomersId", "DevicesId");

                    b.HasIndex("DevicesId");

                    b.ToTable("CustomerEntityDeviceEntity");
                });

            modelBuilder.Entity("Case_Management_Submission_Task.MVVM.Models.Entities.CaseEntity", b =>
                {
                    b.HasOne("Case_Management_Submission_Task.MVVM.Models.Entities.CustomerDeviceEntity", "CustomerDevice")
                        .WithMany("Cases")
                        .HasForeignKey("CustomerId", "DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerDevice");
                });

            modelBuilder.Entity("Case_Management_Submission_Task.MVVM.Models.Entities.CustomerDeviceEntity", b =>
                {
                    b.HasOne("Case_Management_Submission_Task.MVVM.Models.Entities.CustomerEntity", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Case_Management_Submission_Task.MVVM.Models.Entities.DeviceEntity", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Case_Management_Submission_Task.MVVM.Models.Entities.CustomerEntity", b =>
                {
                    b.HasOne("Case_Management_Submission_Task.MVVM.Models.Entities.AddressEntity", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("CustomerEntityDeviceEntity", b =>
                {
                    b.HasOne("Case_Management_Submission_Task.MVVM.Models.Entities.CustomerEntity", null)
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Case_Management_Submission_Task.MVVM.Models.Entities.DeviceEntity", null)
                        .WithMany()
                        .HasForeignKey("DevicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Case_Management_Submission_Task.MVVM.Models.Entities.CustomerDeviceEntity", b =>
                {
                    b.Navigation("Cases");
                });
#pragma warning restore 612, 618
        }
    }
}
